<?xml version="1.0" encoding="UTF-8" ?>
<testsuite tests="3" failures="1" name="zad1.TestHelloServlet" time="0.232" errors="0" skipped="0">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="sun.boot.library.path" value="/opt/devel/jdk1.8.0_73/jre/lib/i386"/>
    <property name="java.vm.version" value="25.73-b02"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="Java HotSpot(TM) Client VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.country" value="PL"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/opt/devel/workspace/zad1"/>
    <property name="java.runtime.version" value="1.8.0_73-b02"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/opt/devel/jdk1.8.0_73/jre/lib/endorsed"/>
    <property name="os.arch" value="i386"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/opt/devel/apache-maven-3.1.0/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib/i386:/lib:/usr/lib"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot Client Compiler"/>
    <property name="os.version" value="3.8.0-31-generic"/>
    <property name="user.home" value="/home/student"/>
    <property name="user.timezone" value="Europe/Warsaw"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="user.name" value="student"/>
    <property name="java.class.path" value="/opt/devel/apache-maven-3.1.0/boot/plexus-classworlds-2.4.2.jar"/>
    <property name="org.slf4j.simpleLogger.defaultLogLevel" value="info"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="32"/>
    <property name="java.home" value="/opt/devel/jdk1.8.0_73/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher test"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="pl"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_73"/>
    <property name="java.ext.dirs" value="/opt/devel/jdk1.8.0_73/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/opt/devel/jdk1.8.0_73/jre/lib/resources.jar:/opt/devel/jdk1.8.0_73/jre/lib/rt.jar:/opt/devel/jdk1.8.0_73/jre/lib/sunrsasign.jar:/opt/devel/jdk1.8.0_73/jre/lib/jsse.jar:/opt/devel/jdk1.8.0_73/jre/lib/jce.jar:/opt/devel/jdk1.8.0_73/jre/lib/charsets.jar:/opt/devel/jdk1.8.0_73/jre/lib/jfr.jar:/opt/devel/jdk1.8.0_73/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/opt/devel/apache-maven-3.1.0"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase classname="zad1.TestHelloServlet" name="servlet_should_not_greet_the_user_if_the_name_is_empty" time="0.215"/>
  <testcase classname="zad1.TestHelloServlet" name="servlet_should_not_greet_the_user_if_the_name_is_null" time="0.002"/>
  <testcase classname="zad1.TestHelloServlet" name="servlet_should_greet_the_user_when_the_name_is_provided" time="0.015">
    <failure message="
Argument(s) are different! Wanted:
printWriter.println(
    &quot;Hell World jan :] - doGet&quot;
);
-&gt; at zad1.TestHelloServlet.servlet_should_greet_the_user_when_the_name_is_provided(TestHelloServlet.java:58)
Actual invocation has different arguments:
printWriter.println(
    &quot;Hell World jan :] - doGet2&quot;
);
-&gt; at servlets.HelloServlet.doGet(HelloServlet.java:22)
" type="Argument(s) are different! Wanted">Argument(s) are different! Wanted:
printWriter.println(
    &quot;Hell World jan :] - doGet&quot;
);
-&gt; at zad1.TestHelloServlet.servlet_should_greet_the_user_when_the_name_is_provided(TestHelloServlet.java:58)
Actual invocation has different arguments:
printWriter.println(
    &quot;Hell World jan :] - doGet2&quot;
);
-&gt; at servlets.HelloServlet.doGet(HelloServlet.java:22)

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at zad1.TestHelloServlet.servlet_should_greet_the_user_when_the_name_is_provided(TestHelloServlet.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
</failure>
  </testcase>
</testsuite>